package com.spring.board.comment.service;

import java.util.List;

import com.spring.board.command.CommentVO;

public interface ICommentService {

	void commentRegist(CommentVO vo);
	List<CommentVO> getList(int bno, int pageNum);
	int getTotal(int bno);
	String update(int cno, String newComment);
	String delete(int cno, String inputPw);
	String checkPassword(int cno, String inputPw);
	else if (e.target.matches('.commentModify')) {
	    console.log('Modify 버튼이 클릭되었습니다.');
	    const cno = e.target.getAttribute('href');
	
	    async function getPassword() {
	        while (true) {
	            const inputPw = prompt('비밀번호를 입력하세요');
	            if (inputPw === null) {
	                break;
	            } else if (inputPw.trim() === '') {
	                alert('비밀번호를 입력하세요');
	                continue;
	            } else {
	                try {
	                    const passwordCheckResponse = await fetch(`${pageContext.request.contextPath}/comment/${cno}?commentPw=${inputPw}`);
	                    const checkResult = await passwordCheckResponse.text();
	
	                    if (checkResult === "비밀번호 일치") {
	                        // 비밀번호가 일치하면 모달을 띄우고 모달 내용 입력 함수 호출
	                        showModifyModal(cno); // 모달 띄우기 및 내용 입력 함수 호출
	                        break;
	                    } else if (checkResult === "비밀번호가 틀렸습니다.") {
	                        alert('비밀번호가 틀렸습니다');
	                        break; // 비밀번호가 틀렸을 때 바로 루프를 종료해야 합니다.
	                    }
	                } catch (error) {
	                    console.error('Error:', error);
	                    break;
	                }
	            }
	        }
	    }
	
	    await getPassword();
	}
	
}	
